@page "/atis"
@implements IDisposable
@using System.Text.Json
@using ZoaIds.Client.ApiClients
@using AtisModel = ZoaIds.Shared.Models.Atis
@inject DatisApiClient DatisApiClient
@inject ILogger<Atis> Logger

<h3>Atis</h3>

@if (DisplayedAtisList is not null)
{
	foreach (var atis in DisplayedAtisList)
	{
		<MudPaper Class="ma-1 pa-1">
			<MudStack Spacing="2" Row="true">
				<MudContainer>
					<div class="d-block"><MudText>@atis.IcaoId</MudText></div>
					@if (atis.Type != ZoaIds.Shared.Models.AtisType.Combined)
					{
						<div class="d-block">@atis.Type.ToString()</div>
					}
				</MudContainer>
				<MudText>@atis.InfoLetter</MudText>
			</MudStack>
			
		</MudPaper>
	}
}

@code {

	private List<AtisModel>? DisplayedAtisList = null;
	private PeriodicTimer atisUpdateTimer = new(TimeSpan.FromSeconds(60));

	protected override async Task OnInitializedAsync()
	{
		await UpdateAtis();
		RunTimer();
	}

	private async Task UpdateAtis()
	{
		var newAtisList = await DatisApiClient.GetAllAtis();
		DisplayedAtisList = newAtisList.Values.ToList();
		StateHasChanged();
	}

	private async void RunTimer()
	{
		while (await atisUpdateTimer.WaitForNextTickAsync())
		{
			await UpdateAtis();
		}
	}

	public void Dispose()
	{
		atisUpdateTimer?.Dispose();
	}
}
