@using ZoaIds.Client.Services
@using ZoaIds.Shared.Models
@using ZoaIds.Shared.ExternalDataModels
@using ZoaIds.Shared.Extensions
@inject StateContainer StateContainer
@implements IDisposable

<MudText>@StateContainer.SelectedTowerCabAirport?.Name</MudText>
@foreach (var controller in OnlineControllers)
{
    <MudText>@controller.Callsign - @controller.Cid - @controller.SingleLineAtis()</MudText>
}


@code {
    [Parameter, EditorRequired]
    public Airport? Airport { get; set; }

    public IEnumerable<VatsimJsonController> OnlineControllers { get; set; } = Enumerable.Empty<VatsimJsonController>();

    protected override void OnInitialized()
    {
        StateContainer.OnDatafeedUpdate += UpdateControllerList;
    }

    protected override void OnParametersSet()
    {
        // When the Airport parameter is changed, we need to update the controller information
        UpdateControllerList();
    }

    public void Dispose()
    {
        StateContainer.OnDatafeedUpdate -= UpdateControllerList;
    }

    private void UpdateControllerList()
    {
        if (StateContainer.VatsimDatafeed is null || Airport is null) { return; }

        OnlineControllers = StateContainer.VatsimDatafeed.GetControllersByPrefix(Airport.FaaId).Where(c => IsCabController(c));
    }

    private bool IsCabController(VatsimJsonController controller)
    {
        return controller.Facility is >= 2 and <= 4;
        //return !(controller.Callsign.EndsWith("APP") || controller.Callsign.EndsWith("DEP") || controller.Callsign.EndsWith("CTR"));
    }
}
